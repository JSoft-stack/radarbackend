import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { NestExpressApplication } from '@nestjs/platform-express';
import * as fs from 'fs';
import { join } from 'path';
import * as path from 'path';
import * as express from 'express';

async function bootstrap() {
  const app = await NestFactory.create<NestExpressApplication>(AppModule);

  // --- 1. –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É uploads, –µ—Å–ª–∏ –Ω–µ—Ç ---
  const uploadsDir = path.join(__dirname, '..', 'uploads');
  if (!fs.existsSync(uploadsDir)) {
    fs.mkdirSync(uploadsDir, { recursive: true });
    console.log('üìÅ –ü–∞–ø–∫–∞ uploads —Å–æ–∑–¥–∞–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');
  }

    // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞–∑–¥–∞—á–∞
  app.use('/uploads', express.static(uploadsDir));

  // –ï—Å–ª–∏ –∑–∞—à–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞ /uploads ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ –æ—à–∏–±–∫–∏
  app.use('/uploads', (req, res) => {
    res.status(200).send('Uploads directory ‚Äî –¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –∫ —Ñ–∞–π–ª–∞–º.');
  });

  // // –ü–æ–ª—É—á–∞–µ–º native Express instance –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ global
  // const expressApp = app.getHttpAdapter().getInstance();
  // // –±–µ–∑–æ–ø–∞—Å–Ω–æ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ
  // (global as unknown as { express?: import('express').Express }).express = expressApp;

  // app.useStaticAssets(join(__dirname, '..', 'uploads'), {
  //   prefix: '/uploads/',
  // });

  app.enableCors({
    origin:'*',
    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS',
    credentials: true,
    preflightContinue: false,
    optionsSuccessStatus: 204,
  });

  await app.listen(process.env.PORT ?? 3000);
  console.log(`üöÄ Server running on port ${process.env.PORT || 3000}`);
}
bootstrap();
